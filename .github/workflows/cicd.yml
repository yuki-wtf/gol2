name: gol2

on:
  push:
    tags:
      - v*
    branches:
      - 'dev'
      - 'update-starknet'
  workflow_dispatch:
env:
  GAR: europe-west9-docker.pkg.dev
  Project: gol2
  GCP_Project_ID: ${{ startsWith(github.event.ref, 'refs/tags/v') && 'gol2-production' || 'gol2-development' }}
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    environment:
      name: ${{ startsWith(github.event.ref, 'refs/tags/v') && 'production' || 'development' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GAR }}/${{ env.GCP_Project_ID }}/${{ env.Project }}/${{ github.head_ref && 'feature' || startsWith(github.event.ref, 'refs/tags/v') && github.event.repository.default_branch || github.ref_name }}
          flavor: latest=false
          tags: |
            type=sha,event=branch
            type=ref,suffix=-{{sha}},event=pr
            type=ref,event=tag

      - uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          project_id: ${{ env.GCP_Project_ID }}
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  Deploy-dev:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/dev'
    needs: Build
    runs-on: ubuntu-latest
    env:
      image: ${{ needs.Build.outputs.image }}
    environment:
      name: development
      url: https://goerli.gol2.io
    steps:
      - uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          project_id: ${{ env.GCP_Project_ID }}
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: gol2
          image: ${{ env.image }}
          region: europe-west9
